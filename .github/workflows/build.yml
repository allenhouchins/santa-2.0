name: Build Santa Extension - arm64, x86_64, universal

on:
  #push:
  #  branches: [ main ] disabling for now - only runs on manual trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: osquery-santa-extension

      # Cache Homebrew packages
      - name: Cache Homebrew packages
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/Homebrew
            /opt/homebrew/Cellar
          key: ${{ runner.os }}-brew-${{ hashFiles('osquery/.github/workflows/*') }}
          restore-keys: |
            ${{ runner.os }}-brew-

      # Cache osquery repository
      - name: Cache osquery repository
        id: cache-osquery
        uses: actions/cache@v3
        with:
          path: osquery
          key: ${{ runner.os }}-osquery-repo-${{ hashFiles('osquery-santa-extension/src/*', 'osquery-santa-extension/CMakeLists.txt') }}

      # Clone osquery if not cached
      - name: Clone osquery repository
        if: steps.cache-osquery.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/osquery/osquery.git

      # Cache ARM64 build directory
      - name: Cache osquery arm64 build
        uses: actions/cache@v3
        with:
          path: osquery/build_arm64
          key: ${{ runner.os }}-osquery-build-arm64-${{ hashFiles('osquery-santa-extension/src/*', 'osquery-santa-extension/CMakeLists.txt', 'osquery/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-osquery-build-arm64-

      # Cache x86_64 build directory
      - name: Cache osquery x86_64 build
        uses: actions/cache@v3
        with:
          path: osquery/build_x86_64
          key: ${{ runner.os }}-osquery-build-x86_64-${{ hashFiles('osquery-santa-extension/src/*', 'osquery-santa-extension/CMakeLists.txt', 'osquery/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-osquery-build-x86_64-

      - name: Setup extension in osquery
        run: |
          mkdir -p osquery/external/extension_santa/src
          cp -r osquery-santa-extension/src/* osquery/external/extension_santa/src/
          cp osquery-santa-extension/CMakeLists.txt osquery/external/extension_santa/

      - name: Install dependencies
        run: |
          cd osquery
          brew install cmake openssl zlib
          # Create a virtual environment for Python dependencies
          python3 -m venv venv
          source venv/bin/activate
          pip install setuptools pyyaml

      # Build for ARM64 - remove zlib and openssl from the cache? TODO
      - name: Build ARM64 extension
        run: |
          cd osquery
          # Activate the virtual environment
          source venv/bin/activate
          # Set environment variables for zlib
          export LDFLAGS="-L/opt/homebrew/opt/zlib/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/zlib/include"
          export PKG_CONFIG_PATH="/opt/homebrew/opt/zlib/lib/pkgconfig"
          # Build for ARM64
          mkdir -p build_arm64 && cd build_arm64
          cmake -DCMAKE_OSX_ARCHITECTURES=arm64 ..
          cmake --build . --target santa -j3
          
      # Build for x86
      - name: Build x86_64 extension
        run: |
          cd osquery
          # Activate the virtual environment
          source venv/bin/activate
          # Set environment variables for zlib
          export LDFLAGS="-L/opt/homebrew/opt/zlib/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/zlib/include"
          export PKG_CONFIG_PATH="/opt/homebrew/opt/zlib/lib/pkgconfig"
          # Build for x86_64
          mkdir -p build_x86_64 && cd build_x86_64
          cmake -DCMAKE_OSX_ARCHITECTURES=x86_64 ..
          cmake --build . --target santa -j3
      
      # Create universal binary w/ lipo
      - name: Create Universal Binary
        run: |
          mkdir -p binaries
          cp osquery/build_arm64/external/extension_santa/santa.ext ./binaries/santa_arm64.ext
          cp osquery/build_x86_64/external/extension_santa/santa.ext ./binaries/santa_x86_64.ext
          lipo -create binaries/santa_arm64.ext binaries/santa_x86_64.ext -output ./binaries/santa_universal.ext
          
      # Save all binaries as artifacts
      - name: Save extension artifacts
        uses: actions/upload-artifact@v4
        with:
          name: santa-extensions
          path: binaries/*
          
      # Create or update "latest" GitHub release with all binaries
      - name: Update Latest Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: "santa.ext"
          files: |
            binaries/santa_arm64.ext
            binaries/santa_x86_64.ext
            binaries/santa_universal.ext
          draft: false
          prerelease: false
          body: |
            This is the latest build of the Santa extension for osquery.
            
            ## Binaries:
            - `santa_arm64.ext`: For Apple Silicon Macs
            - `santa_x86_64.ext`: For Intel Macs
            - `santa_universal.ext`: Universal binary that works on both architectures
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}